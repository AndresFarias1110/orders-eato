services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: eato
      POSTGRES_PASSWORD: 12345
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring
  backend:
    build:
      context: ./orders-backend
    ports:
      - "4000:4000"
    volumes:
      - ./orders-backend:/app
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: eato
      DB_PASSWORD: 12345
      DB_NAME: orders
    networks:
      - monitoring
  frontend:
    build:
      context: ./orders-front
    ports:
      - "5173:80"
    volumes:
      - ./frontend:/app
    networks:
      - monitoring
  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      # AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: mypassword
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3001:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    depends_on:
      - prometheus
volumes:
  postgres_data:
  grafana-data:
networks:
  monitoring:
    driver: bridge
